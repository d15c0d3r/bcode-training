1-****async and await
 Rewrite the below using Async-Await syntax

function getProcessedData(url) {
  return downloadData(url) // returns a promise
    .catch(e => {
      return downloadFallbackData(url)  // returns a promise
    })
    .then(v => {
      return processDataInWorker(v)  // returns a promise
    })
} 

=> downloadData, downloadFallbackData, processDataInWorker are of type "promise" of the form 
   promise((resolve, reject)=>{/*some code*/ /*if !error*/ resolve("some value"); /*if error*/ reject("error value")})
=> whenever a resolve() is executed, that means its result i.e "some value" goes into the nearest "then(result)" then block where
   result === "some value" and if reject() is executed, its result i.e "error value" goes into the nearest "catch(result)" catch block
   where result === "error value"

async function getProcessedData(url) {
     let v;
     try {
         v = await downloadData(url);
     } catch (err) {
         v = await downloadFallbackData(url);
     }
     return await processDataInWorker(v);
  }
